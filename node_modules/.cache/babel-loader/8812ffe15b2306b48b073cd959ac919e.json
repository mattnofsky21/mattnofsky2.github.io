{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mattn\\\\OneDrive\\\\\\u684C\\u9762\\\\mattnofsky21.github.io\\\\src\\\\Components\\\\App\\\\App.jsx\";\nimport React from 'react';\nimport './App.css';\nimport Playlist from '../Playlist/Playlist';\nimport SearchBar from '../SearchBar/SearchBar';\nimport SearchResults from '../SearchResults/SearchResults';\nimport Spotify from '../../util/Spotify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchResults: [],\n      playlistName: 'New Playlist',\n      playlistTracks: []\n    };\n    this.search = this.search.bind(this);\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n  }\n\n  search(term) {\n    Spotify.search(term).then(searchResults => {\n      this.setState({\n        searchResults: searchResults\n      });\n    });\n  }\n\n  addTrack(track) {\n    let tracks = this.state.playlistTracks;\n\n    if (tracks.find(savedTrack => savedTrack.id === track.id)) {\n      return;\n    }\n\n    tracks.push(track);\n    this.setState({\n      playlistTracks: tracks\n    });\n  }\n\n  removeTrack(track) {\n    let tracks = this.state.playlistTracks;\n    tracks = tracks.filter(currentTrack => currentTrack.id !== track.id);\n    this.setState({\n      playlistTracks: tracks\n    });\n  }\n\n  updatePlaylistName(name) {\n    this.setState({\n      playlistName: name\n    });\n  }\n\n  savePlaylist() {\n    const trackUris = this.state.playlistTracks.map(track => track.uri);\n    Spotify.savePlaylist(this.state.playlistName, trackUris).then(() => {\n      this.setState({\n        playlistName: 'New Playlist',\n        playlistTracks: []\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Ja\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"highlight\",\n          children: \"mmm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this), \"ing\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n          onSearch: this.search\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App-playlist\",\n          children: [/*#__PURE__*/_jsxDEV(SearchResults, {\n            searchResults: this.state.searchResults,\n            onAdd: this.addTrack\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Playlist, {\n            playlistName: this.state.playlistName,\n            playlistTracks: this.state.playlistTracks,\n            onNameChange: this.updatePlaylistName,\n            onRemove: this.removeTrack,\n            onSave: this.savePlaylist\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/mattn/OneDrive/桌面/mattnofsky21.github.io/src/Components/App/App.jsx"],"names":["React","Playlist","SearchBar","SearchResults","Spotify","App","Component","constructor","props","state","searchResults","playlistName","playlistTracks","search","bind","addTrack","removeTrack","updatePlaylistName","savePlaylist","term","then","setState","track","tracks","find","savedTrack","id","push","filter","currentTrack","name","trackUris","map","uri","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\n\r\nimport Playlist from '../Playlist/Playlist';\r\nimport SearchBar from '../SearchBar/SearchBar';\r\nimport SearchResults from '../SearchResults/SearchResults';\r\nimport Spotify from '../../util/Spotify';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      searchResults: [],\r\n      playlistName: 'New Playlist',\r\n      playlistTracks: []\r\n    };\r\n\r\n    this.search = this.search.bind(this);\r\n    this.addTrack = this.addTrack.bind(this);\r\n    this.removeTrack = this.removeTrack.bind(this);\r\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\r\n    this.savePlaylist = this.savePlaylist.bind(this);\r\n  }\r\n\r\n  search(term) {\r\n    Spotify.search(term).then(searchResults => {\r\n      this.setState({searchResults: searchResults});\r\n    });\r\n  }\r\n\r\n  addTrack(track) {\r\n    let tracks = this.state.playlistTracks;\r\n    if (tracks.find(savedTrack => savedTrack.id === track.id)) {\r\n      return;\r\n    }\r\n\r\n    tracks.push(track);\r\n    this.setState({playlistTracks: tracks});\r\n  }\r\n\r\n  removeTrack(track) {\r\n    let tracks = this.state.playlistTracks;\r\n    tracks = tracks.filter(currentTrack => currentTrack.id !== track.id);\r\n\r\n    this.setState({playlistTracks: tracks});\r\n  }\r\n\r\n  updatePlaylistName(name) {\r\n    this.setState({playlistName: name});\r\n  }\r\n\r\n  savePlaylist() {\r\n    const trackUris = this.state.playlistTracks.map(track => track.uri);\r\n    Spotify.savePlaylist(this.state.playlistName, trackUris).then(() => {\r\n      this.setState({\r\n        playlistName: 'New Playlist',\r\n        playlistTracks: []\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Ja<span className=\"highlight\">mmm</span>ing</h1>\r\n        <div className=\"App\">\r\n          <SearchBar onSearch={this.search} />\r\n          <div className=\"App-playlist\">\r\n            <SearchResults searchResults={this.state.searchResults}\r\n                           onAdd={this.addTrack} />\r\n            <Playlist playlistName={this.state.playlistName}\r\n                      playlistTracks={this.state.playlistTracks}\r\n                      onNameChange={this.updatePlaylistName}\r\n                      onRemove={this.removeTrack}\r\n                      onSave={this.savePlaylist} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}